# 1. Вычислить число pi c заданной точностью d. Число d находится в интервале[1e-1, 1e-10]
# Пример:
# - при d = 0.001, pi = 3.141.
# Примечание:
# Использовать только итерационные алгоритмы вычисления числа pi. Любой на ваш выбор.
# Написать функцию, которая принимает аргумент: точность вычисления числа pi
# Возвращает:
#     Вычисленное число pi
#     Количество выполненных итераций
#     Погрешность вычисления
#     Пример вызова функции: - vallis(1e-4) -> (3.141392685883853, 3928, -0.00019996770594010727)
# https://en.wikipedia.org/wiki/Bailey%E2%80%93Borwein%E2%80%93Plouffe_formula
# Bailey–Borwein–Plouffe formula


from math import pi

def bbp(prec: float) -> tuple:
    res = 0
    k = 0
    while abs(pi - res) > prec:
        term = (1/16**k) * (4/(8*k+1) - 2/(8*k+4) - 1/(8*k+5) - 1/(8*k+6))
        res += term
        k += 1
    return (res, k, abs(pi-res))

d = float(input('Введите число d указывающее погрешность вычисления числа pi '))
print(bbp(d))